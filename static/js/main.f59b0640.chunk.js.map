{"version":3,"sources":["constants/request.js","components/Row/Row.js","components/Banner/Banner.js","components/Nav/Nav.js","components/App.js","serviceWorker.js","index.js"],"names":["BASE_URL","IMAGE_URL","API_KEY","requests","fetchTopRatedTVShow","fetchPopularTVShow","fetchPopularMovies","fetchTopRatedMovies","fetchUpComingMovies","fetchNowPlayingMovies","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Row","id","title","fetchUrl","isLargeRow","play","playingBy","onChange","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","axios","get","request","data","results","console","log","fetchData","className","map","movie","key","src","poster_path","backdrop_path","alt","name","onClick","movieTrailer","original_title","then","url","urlParams","URLSearchParams","URL","search","catch","error","handleClick","videoId","opts","width","height","playerVars","autoplay","Banner","setMovie","response","Math","floor","random","length","str","n","style","backgroundSize","backgroundPosition","backgroundImage","origin_name","overview","substr","Nav","Boolean","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","setPlayingBy","1","2","3","4","5","players","setPlayers","stopPlayers","handleChange","playing","ps","startPlayer","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"4WAAMA,G,MAAW,gCACJC,EAAY,sCACnBC,EAAU,mCAqBDC,EApBE,CAEfC,oBAAoB,GAAD,OAAKJ,EAAL,iCAAsCE,EAAtC,mBACnBG,mBAAmB,GAAD,OAAKL,EAAL,+BAAoCE,EAApC,mBAGlBI,mBAAmB,GAAD,OAAKN,EAAL,kCAAuCE,EAAvC,mBAClBK,oBAAoB,GAAD,OAAKP,EAAL,oCAAyCE,EAAzC,mBACnBM,oBAAoB,GAAD,OAAKR,EAAL,mCAAwCE,EAAxC,mBACnBO,sBAAsB,GAAD,OAAKT,EAAL,sCAA2CE,EAA3C,mBACrBQ,cAAc,GAAD,OAAKV,EAAL,sCAA2CE,EAA3C,mBACbS,sBAAsB,GAAD,OAAKX,EAAL,gCAAqCE,EAArC,sBACrBU,cAAc,GAAD,OAAKZ,EAAL,oCAAyCE,EAAzC,mBACbW,kBAAkB,GAAD,OAAKb,EAAL,mCAAwCE,EAAxC,mBACjBY,kBAAkB,GAAD,OAAKd,EAAL,mCAAwCE,EAAxC,mBACjBa,kBAAkB,GAAD,OAAKf,EAAL,mCAAwCE,EAAxC,mBACjBc,mBAAmB,GAAD,OAAKhB,EAAL,mCAAwCE,EAAxC,sBAClBe,mBAAmB,GAAD,OAAKjB,EAAL,mCAAwCE,EAAxC,oB,uBCbL,SAASgB,EAAT,GAQX,IAPFC,EAOC,EAPDA,GACAC,EAMC,EANDA,MACAC,EAKC,EALDA,SACAC,EAIC,EAJDA,WACAC,EAGC,EAHDA,KACAC,EAEC,EAFDA,UACAC,EACC,EADDA,SACC,EAC2BC,mBAAS,IADpC,mBACMC,EADN,KACcC,EADd,OAEmCF,mBAAS,IAF5C,mBAEMG,EAFN,KAEkBC,EAFlB,KAyCD,OAVAC,qBAAU,WAAM,4CACd,4BAAAC,EAAA,sEACwBC,IAAMC,IAAIb,GADlC,cACQc,EADR,OAEEP,EAAUO,EAAQC,KAAKC,SACvBC,QAAQC,IAAIJ,GAHd,kBAISA,GAJT,4CADc,uBAAC,WAAD,wBAQdK,KACC,CAACnB,IAEF,yBAAKoB,UAAU,OACb,yBAAKA,UAAU,aACb,4BAAKrB,IAGP,yBAAKqB,UAAU,eACZd,EAAOe,KAAI,SAACC,GAAD,OACV,yBACEC,IAAKD,EAAMxB,GACXsB,UAAS,qBAAgBnB,GAAc,oBACvCuB,IAAG,UAAK5C,GAAL,OACDqB,EAAU,OAAGqB,QAAH,IAAGA,OAAH,EAAGA,EAAOG,YAAV,OAAwBH,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAOI,eAE3CC,IAAKL,EAAMM,KACXC,QAAS,kBA7CC,SAACP,GACfnB,IAAcL,GAChBM,EAAS,EAAGN,GAEdgC,KAAkB,OAALR,QAAK,IAALA,OAAA,EAAAA,EAAOM,QAAP,OAAeN,QAAf,IAAeA,OAAf,EAAeA,EAAOvB,SAAtB,OAA+BuB,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAOS,iBAAkB,IAClEC,MAAK,SAACC,GACL,IAAMC,EAAY,IAAIC,gBAAgB,IAAIC,IAAIH,GAAKI,QAC/CH,EAAUrB,IAAI,OAASL,GACzBC,EAAc,IACdL,EAASN,EAAIA,IACJA,IAAOK,EAChBM,EAAcyB,EAAUrB,IAAI,OAE5BJ,EAAcyB,EAAUrB,IAAI,MAC5BT,EAASN,EAAIA,OAGhBwC,OAAM,SAACC,GAAD,OAAWtB,QAAQC,IAAIqB,MA4BTC,CAAYlB,UAKjC,6BACGpB,GAAQM,GACP,kBAAC,IAAD,CAASiC,QAASjC,EAAYkC,KA5DzB,CACXC,MAAO,OACPC,OAAQ,QACRC,WAAY,CACVC,SAAU,Q,MChBD,SAASC,IAAU,IAAD,EACL1C,mBAAS,IADJ,mBACxBiB,EADwB,KACjB0B,EADiB,OAEK3C,mBAAS,IAFd,mBAExBG,EAFwB,KAEZC,EAFY,KAS/BC,qBAAU,WAAM,4CACd,4BAAAC,EAAA,sEACyBC,IACpBC,IAAI/B,EAASM,uBACb4C,MAAK,SAACiB,GACLD,EACEC,EAASlC,KAAKC,QACZkC,KAAKC,MAAMD,KAAKE,SAAWH,EAASlC,KAAKC,QAAQqC,OAAS,QANpE,cACQJ,EADR,yBAUSA,GAVT,4CADc,uBAAC,WAAD,wBAad9B,KACC,IAcH,IAAemC,EAAKC,EAGpB,OACE,oCACE,4BACEnC,UAAU,SACVoC,MAAO,CACLC,eAAgB,QAChBC,mBAAoB,gBACpBC,gBAAgB,OAAD,OAAS/E,GAAT,QACR,OAAL0C,QAAK,IAALA,OAAA,EAAAA,EAAOI,iBAAP,OAAwBJ,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAOG,aADlB,OAKjB,yBAAKL,UAAU,mBACb,wBAAIA,UAAU,iBACN,OAALE,QAAK,IAALA,OAAA,EAAAA,EAAOM,QAAP,OAAeN,QAAf,IAAeA,OAAf,EAAeA,EAAOvB,SAAtB,OAA+BuB,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAOsC,cAAe,IAGxD,6BACE,4BAAQxC,UAAU,iBAAiBS,QAAS,WAjCpDC,KAAkB,OAALR,QAAK,IAALA,OAAA,EAAAA,EAAOM,QAAP,OAAeN,QAAf,IAAeA,OAAf,EAAeA,EAAOvB,SAAtB,OAA+BuB,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAOS,iBAAkB,IAClEC,MAAK,SAACC,GACL,IAAMC,EAAY,IAAIC,gBAAgB,IAAIC,IAAIH,GAAKI,QAC/CH,EAAUrB,IAAI,OAASL,EACzBC,EAAc,IAEdA,EAAcyB,EAAUrB,IAAI,SAG/ByB,OAAM,SAACC,GAAD,OAAWtB,QAAQC,IAAIqB,QAyBN,KAAf/B,EAAoB,OAAS,QAEhC,4BAAQY,UAAU,kBAAlB,UAEF,yBAAKA,UAAU,uBA1BRkC,GA2BO,OAALhC,QAAK,IAALA,OAAA,EAAAA,EAAOuC,WAAY,GA3BhBN,EA2BoB,KA1BnC,OAAHD,QAAG,IAAHA,OAAA,EAAAA,EAAKD,QAASE,EAAID,EAAIQ,OAAO,EAAGP,EAAI,GAAK,MAAQD,KA6B7C,yBAAKlC,UAAU,uBAEhBZ,GAAc,kBAAC,IAAD,CAASiC,QAASjC,EAAYkC,KAlEpC,CACXC,MAAO,OACPE,WAAY,CACVC,UAAU,O,MCVD,SAASiB,IAAO,IAAD,EACD1D,mBAAS2D,SADR,mBACrBC,EADqB,KACfC,EADe,KAe5B,OAbAxD,qBAAU,WAQR,OAPAyD,OAAOC,iBAAiB,UAAU,WAC5BD,OAAOE,QAAU,IACnBH,GAAW,GAEXA,GAAW,MAGR,WACLC,OAAOG,oBAAoB,aAE5B,IAGD,yBAAKlD,UAAS,cAAS6C,GAAQ,cAC7B,yBACE7C,UAAU,WACVI,IAAI,4EACJG,IAAI,YAEN,4BAAQP,UAAU,WAAlB,WCjBS,SAASmD,IAAO,IAAD,EACMlE,mBAAS,GADf,mBACrBF,EADqB,KACVqE,EADU,OAEEnE,mBAAS,CACrCoE,GAAG,EACHC,GAAG,EACHC,GAAG,EACHC,GAAG,EACHC,GAAG,IAPuB,mBAErBC,EAFqB,KAEZC,EAFY,KAU5B,SAASC,IACPD,GAAW,iBAAO,CAChBN,GAAG,EACHC,GAAG,EACHC,GAAG,EACHC,GAAG,EACHC,GAAG,MAgBP,SAASI,EAAaC,EAASpF,GACb,IAAZoF,GACFF,IACAR,EAAaU,KAEbF,IACAR,EAAaU,GAlBjB,SAAqBpF,GACnB,IAAIqF,EAAK,CACPV,GAAG,EACHC,GAAG,EACHC,GAAG,EACHC,GAAG,EACHC,GAAG,GAELM,EAAGrF,IAAM,EACTiF,EAAWI,GAUTC,CAAYtF,IAmBhB,OACE,yBAAKsB,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,CACEtB,GAAG,IACHC,MAAM,oBACNC,SAAUlB,EAASQ,sBACnBa,UAAWA,EACXD,KAAM4E,EAAQ,GACd1E,SAAU6E,EACVhF,YAAU,IAEZ,kBAAC,EAAD,CACEH,GAAG,IACHC,MAAM,iBACNC,SAAUlB,EAASG,mBACnBkB,UAAWA,EACXD,KAAM4E,EAAQ,GACd1E,SAAU6E,IAEZ,kBAAC,EAAD,CACEnF,GAAG,IACHC,MAAM,kBACNC,SAAUlB,EAASK,oBACnBgB,UAAWA,EACXD,KAAM4E,EAAQ,GACd1E,SAAU6E,IAEZ,kBAAC,EAAD,CACEnF,GAAG,IACHC,MAAM,gBACNC,SAAUlB,EAASU,kBACnBW,UAAWA,EACXD,KAAM4E,EAAQ,GACd1E,SAAU6E,IAEZ,kBAAC,EAAD,CACEnF,GAAG,IACHC,MAAM,gBACNC,SAAUlB,EAASW,kBACnBU,UAAWA,EACXD,KAAM4E,EAAQ,GACd1E,SAAU6E,KChGEjB,QACW,cAA7BG,OAAOkB,SAASC,UAEe,UAA7BnB,OAAOkB,SAASC,UAEhBnB,OAAOkB,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB/D,MAAK,SAAAgE,GACJA,EAAaC,gBAEd3D,OAAM,SAAAC,GACLtB,QAAQsB,MAAMA,EAAM2D,c","file":"static/js/main.f59b0640.chunk.js","sourcesContent":["const BASE_URL = \"https://api.themoviedb.org/3\";\nexport const IMAGE_URL = \"https://image.tmdb.org/t/p/original\";\nconst API_KEY = \"4a6cbaa3b5a8f0808bcdd4b9861b8b5b\";\nconst requests = {\n  //TV SHOW\n  fetchTopRatedTVShow: `${BASE_URL}/tv/top_rated?api_key=${API_KEY}&language=en-US`,\n  fetchPopularTVShow: `${BASE_URL}/tv/popular?api_key=${API_KEY}&language=en-US`,\n  \n  //MOVIES\n  fetchPopularMovies: `${BASE_URL}/movie/popular?api_key=${API_KEY}&language=en-US`,\n  fetchTopRatedMovies: `${BASE_URL}/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n  fetchUpComingMovies: `${BASE_URL}/movie/upcoming?api_key=${API_KEY}&language=en-US`,\n  fetchNowPlayingMovies: `${BASE_URL}/movie/now_playing?api_key=${API_KEY}&language=en-US`,\n  fetchTrending: `${BASE_URL}/trending/all/week?api_key=${API_KEY}&language=en-US`,\n  fetchNetflixOriginals: `${BASE_URL}/discover/tv?api_key=${API_KEY}&with_networks=213`,\n  fetchTopRated: `${BASE_URL}/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n  fetchActionMovies: `${BASE_URL}/discover/movie?api_key=${API_KEY}&with_genres=28`,\n  fetchComedyMovies: `${BASE_URL}/discover/movie?api_key=${API_KEY}&with_genres=35`,\n  fetchHorrorMovies: `${BASE_URL}/discover/movie?api_key=${API_KEY}&with_genres=27`,\n  fetchRomanceMovies: `${BASE_URL}/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n  fetchDocumentaries: `${BASE_URL}/discover/movie?api_key=${API_KEY}&with_genres=99`,\n};\n\nexport default requests;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./Row.css\";\nimport { IMAGE_URL } from \"../../constants/request\";\nimport Youtube from \"react-youtube\";\nimport movieTrailer from \"movie-trailer\";\n\nexport default function Row({\n  id,\n  title,\n  fetchUrl,\n  isLargeRow,\n  play,\n  playingBy,\n  onChange,\n}) {\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n  const opts = {\n    width: \"100%\",\n    height: \"360px\",\n    playerVars: {\n      autoplay: 1,\n    },\n  };\n\n  const handleClick = (movie) => {\n    if (playingBy !== id) {\n      onChange(0, id);\n    }\n    movieTrailer(movie?.name || movie?.title || movie?.original_title || \"\")\n      .then((url) => {\n        const urlParams = new URLSearchParams(new URL(url).search);\n        if (urlParams.get(\"v\") === trailerUrl) {\n          setTrailerUrl(\"\");\n          onChange(id, id);\n        } else if (id === playingBy) {\n          setTrailerUrl(urlParams.get(\"v\"));\n        } else {\n          setTrailerUrl(urlParams.get(\"v\"));\n          onChange(id, id);\n        }\n      })\n      .catch((error) => console.log(error));\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      console.log(request);\n      return request;\n    }\n\n    fetchData();\n  }, [fetchUrl]);\n  return (\n    <div className=\"row\">\n      <div className=\"row_title\">\n        <h2>{title}</h2>\n      </div>\n\n      <div className=\"row_posters\">\n        {movies.map((movie) => (\n          <img\n            key={movie.id}\n            className={`row_poster ${isLargeRow && \"row_poster_large\"}`}\n            src={`${IMAGE_URL}${\n              isLargeRow ? movie?.poster_path : movie?.backdrop_path\n            }`}\n            alt={movie.name}\n            onClick={() => handleClick(movie)}\n          />\n        ))}\n      </div>\n\n      <div>\n        {play && trailerUrl && (\n          <Youtube videoId={trailerUrl} opts={opts}></Youtube>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport requests, { IMAGE_URL } from \"../../constants/request\";\nimport \"./Banner.css\";\nimport Youtube from \"react-youtube\";\nimport movieTrailer from \"movie-trailer\";\nexport default function Banner() {\n  const [movie, setMovie] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n  const opts = {\n    width: \"100%\",\n    playerVars: {\n      autoplay: true,\n    },\n  };\n  useEffect(() => {\n    async function fetchData() {\n      const response = await axios\n        .get(requests.fetchNowPlayingMovies)\n        .then((response) => {\n          setMovie(\n            response.data.results[\n              Math.floor(Math.random() * response.data.results.length - 1)\n            ]\n          );\n        });\n      return response;\n    }\n    fetchData();\n  }, []);\n  function handleClick() {\n    movieTrailer(movie?.name || movie?.title || movie?.original_title || \"\")\n      .then((url) => {\n        const urlParams = new URLSearchParams(new URL(url).search);\n        if (urlParams.get(\"v\") === trailerUrl) {\n          setTrailerUrl(\"\");\n        } else {\n          setTrailerUrl(urlParams.get(\"v\"));\n        }\n      })\n      .catch((error) => console.log(error));\n  }\n\n  const trunc = (str, n) =>\n    str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\n\n  return (\n    <>\n      <header\n        className=\"banner\"\n        style={{\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center center\",\n          backgroundImage: `url(${IMAGE_URL}${\n            movie?.backdrop_path || movie?.poster_path\n          })`,\n        }}\n      >\n        <div className=\"banner_contents\">\n          <h1 className=\"banner_title\">\n            {movie?.name || movie?.title || movie?.origin_name || \"\"}\n          </h1>\n\n          <div>\n            <button className=\"banner_buttons\" onClick={() => handleClick()}>\n              {trailerUrl === \"\" ? \"PLAY\" : \"STOP\"}\n            </button>\n            <button className=\"banner_buttons\"> LIKE</button>\n          </div>\n          <div className=\"banner_description\">\n            {trunc(movie?.overview || \"\", 150)}\n          </div>\n        </div>\n        <div className=\"banner-fadebottom\"></div>\n      </header>\n      {trailerUrl && <Youtube videoId={trailerUrl} opts={opts}></Youtube>}\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"./Nav.css\";\nexport default function Nav() {\n  const [show, handleShow] = useState(Boolean);\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => {\n      if (window.scrollY > 100) {\n        handleShow(true);\n      } else {\n        handleShow(false);\n      }\n    });\n    return () => {\n      window.removeEventListener(\"scroll\");\n    };\n  }, []);\n\n  return (\n    <div className={`nav ${show && \"nav_black\"}`}>\n      <img\n        className=\"nav_logo\"\n        src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\"\n        alt=\"Netflix\"\n      />\n      <button className=\"nav_reg\">SignIn</button>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Row from \"./Row/Row\";\nimport requests from \"../constants/request\";\nimport Banner from \"./Banner/Banner\";\nimport Nav from \"./Nav/Nav\";\n\nexport default function App() {\n  const [playingBy, setPlayingBy] = useState(0);\n  const [players, setPlayers] = useState({\n    1: false,\n    2: false,\n    3: false,\n    4: false,\n    5: false,\n  });\n\n  function stopPlayers() {\n    setPlayers(() => ({\n      1: false,\n      2: false,\n      3: false,\n      4: false,\n      5: false,\n    }));\n  }\n\n  function startPlayer(id) {\n    var ps = {\n      1: false,\n      2: false,\n      3: false,\n      4: false,\n      5: false,\n    };\n    ps[id] = true;\n    setPlayers(ps);\n  }\n\n  function handleChange(playing, id) {\n    if (playing === 0) {\n      stopPlayers();\n      setPlayingBy(playing);\n    } else {\n      stopPlayers();\n      setPlayingBy(playing);\n      startPlayer(id);\n    }\n  }\n\n  // const obj = {\n  //   Horor: {\n  //     title: \"Horror Movies\",\n  //     url: requests.fetchHorrorMovies,\n  //   },\n  //   Comedy: {\n  //     title: \"Comedy Movies\",\n  //     url: requests.fetchComedyMovies,\n  //   },\n  //   Action: {\n  //     title: \"Action Movies\",\n  //     url: requests.fetchActionMovies,\n  //   },\n  // };\n\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Banner />\n      <Row\n        id=\"1\"\n        title=\"Netflix Originals\"\n        fetchUrl={requests.fetchNetflixOriginals}\n        playingBy={playingBy}\n        play={players[1]}\n        onChange={handleChange}\n        isLargeRow\n      />\n      <Row\n        id=\"2\"\n        title=\"Popular Movies\"\n        fetchUrl={requests.fetchPopularMovies}\n        playingBy={playingBy}\n        play={players[2]}\n        onChange={handleChange}\n      />\n      <Row\n        id=\"3\"\n        title=\"Upcoming Movies\"\n        fetchUrl={requests.fetchUpComingMovies}\n        playingBy={playingBy}\n        play={players[3]}\n        onChange={handleChange}\n      />\n      <Row\n        id=\"4\"\n        title=\"Action Movies\"\n        fetchUrl={requests.fetchActionMovies}\n        playingBy={playingBy}\n        play={players[4]}\n        onChange={handleChange}\n      />\n      <Row\n        id=\"5\"\n        title=\"Comedy Movies\"\n        fetchUrl={requests.fetchComedyMovies}\n        playingBy={playingBy}\n        play={players[5]}\n        onChange={handleChange}\n      />\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}